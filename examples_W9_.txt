
// string example 1 ******************************************************************************/

#include <iostream>
#include <string>
using namespace std;

int main()
{
    string s1{"COEN 243"};
    string s2;
    
    cout<<s1<<endl;
    cout<<"the first char has index=0 "<<s1[0]<<endl;
    cout<<"the last char has index=8-1 "<<s1[7]<<endl;
    
    return 0;
}


// string example 2******************************************************************************/

#include <iostream>
#include <string>
using namespace std;

int main()
{
    string s1{"COEN 243"};
    string s2;
    
    s2.assign(s1,3,4);
    cout<<"s2 = "<<s2<<endl;
    
    return 0;
}

// string example 3******************************************************************************/

#include <iostream>
#include <string>
using namespace std;

int main()
{
    string s1{"COEN 243"};
    string s2{"COEN 243"};
    
    cout<<s1.compare(s2)<<endl;
    
    return 0;
}


// Overloading Constructors *****************************************************

#include <iostream>
#include <cmath>
using namespace std;
class Circle{
    public:    
    // data members
        float radius;       
    
    // default constructor
        Circle()
        {
            radius=1;
        }
        
        Circle(double r)
        {
            radius=r;
        }
        
    // member functions   
        float getArea()
        {
            return pow(radius,2) * 3.14159;
        }
        
        void setRadius(float newRadius)
        {
            radius= newRadius;    
        }
};  // end class Circle


int main()
{
    Circle c1; // Declare variable t to be object of class Circle.
    Circle c2(3.5);

    cout << "The radius of c1 is "<<c1.radius<<endl;
    cout << "The radius of c2 is "<<c2.radius<<endl;

    
    return 0;
}



// implementing constructors and member functions outside the class ******************************************************************************/
#include <iostream>
#include <cmath>
using namespace std;
class Circle{
    public:    
    // data members
        float radius;       
    
    // constructors' prototypes
        Circle();
        Circle(float r);
        
    // member functions' prototypes   
        float getArea();
        
        void setRadius(float newRadius);

};  // end class Circle

Circle::Circle()
        {
            radius=1;
        }
        
Circle::Circle(float r)
        {
            radius=r;
        }

float Circle::getArea()
        {
            return pow(radius,2) * 3.14159;
        }
        
        
void Circle::setRadius(float newRadius)
        {
            radius= newRadius;    
        }

int main()
{

        
    Circle c1; // Declare variable t to be object of class Circle.
    Circle c2(3.5);

    cout << "The radius of c1 is "<<c1.radius<<endl;
    cout << "The radius of c2 is "<<c2.radius<<endl;

    
    return 0;
}




// object destructor 1 *******************************************************************************/

#include <iostream>
#include <cmath>
using namespace std;
class Circle{
    public:    
    // data members
        float radius;       
    
    // constructors' prototypes
        Circle();
        Circle(float r);
        ~Circle()
        {
           cout<< "The circle is destroyed\n"; 
        }
        
    // member functions' prototypes   
        float getArea();
        
        void setRadius(float newRadius);

};  // end class Circle

Circle::Circle()
        {
            radius=1;
        }
        
Circle::Circle(float r)
        {
            radius=r;
        }

float Circle::getArea()
        {
            return pow(radius,2) * 3.14159;
        }
        
        
void Circle::setRadius(float newRadius)
        {
            radius= newRadius;    
        }

int main()
{

        
    Circle c1; // Declare variable t to be object of class Circle.
    Circle c2(3.5);

    cout << "The radius of c1 is "<<c1.radius<<endl;
    cout << "The radius of c2 is "<<c2.radius<<endl;
    cout<< sizeof(c1)<<endl;
    
    return 0;
}


// // object destructor 2******************************************************************************/
#include <iostream>
#include <cmath>
using namespace std;
class Circle{
    public:    
    // data members
        float radius;       
    
    // constructors' prototypes
        Circle();
        Circle(float r);
       ~Circle()
        {
           cout<< "The circle is destroyed\n"; 
        }
        
    // member functions' prototypes   
        float getArea();
        
        void setRadius(float newRadius);

};  // end class Circle

Circle::Circle()
        {
            radius=1;
        }
        
Circle::Circle(float r)
        {
            radius=r;
        }

float Circle::getArea()
        {
            return pow(radius,2) * 3.14159;
        }
        
        
void Circle::setRadius(float newRadius)
        {
            radius= newRadius;    
        }

int main()
{
    int i=1;
    if(i==1)
    {
        Circle c1; // Declare variable t to be object of class Circle.
        cout << "The radius of c1 is "<<c1.radius<<endl;
        for( ; ; ); //infinity loop
    }
    
    
    return 0;
}


// Member Initialization Lists ******************************************************************************/

#include <iostream>
using namespace std;
class Circle{
    public:    
    // data members
        float radius;       
    
    // constructors' prototypes
        Circle():radius(1)
        {

        }
        
    // member functions' prototypes   
        
        void setRadius(float newRadius)
        {
            radius= newRadius;    
        }

};  // end class Circle


int main()
{

        Circle c1; // Declare variable t to be object of class Circle.
        cout << "The radius of c1 is "<<c1.radius<<endl;
        
    return 0;
}


// // Member Initialization Lists 2 ******************************************************************************/

#include <iostream>
using namespace std;
class Circle{
    public:    
    // data members
        float radius;       
    
    // constructors' prototypes
        Circle():radius(1)
        {

        }
        
        Circle(float r):radius(r)
        {
            
        }
        
    // member functions' prototypes   
        
        void setRadius(float newRadius)
        {
            radius= newRadius;    
        }

};  // end class Circle


int main()
{

        Circle c1(5.2); // Declare variable t to be object of class Circle.
        cout << "The radius of c1 is "<<c1.radius<<endl;
        
    return 0;
}